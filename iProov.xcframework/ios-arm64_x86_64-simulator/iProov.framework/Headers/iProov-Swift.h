#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef IPROOV_SWIFT_H
#define IPROOV_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import Security;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="iProov",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif







typedef SWIFT_ENUM_NAMED(NSInteger, IPCanceller, "Canceller", open) {
  IPCancellerUser = 0,
  IPCancellerApp = 1,
};


typedef SWIFT_ENUM_NAMED(NSInteger, IPFailureReason, "FailureReason", open) {
  IPFailureReasonUnknown = 0,
  IPFailureReasonTooMuchMovement = 1,
  IPFailureReasonTooBright = 2,
  IPFailureReasonTooDark = 3,
  IPFailureReasonMisalignedFace = 4,
  IPFailureReasonEyesClosed = 5,
  IPFailureReasonFaceTooFar = 6,
  IPFailureReasonFaceTooClose = 7,
  IPFailureReasonSunglasses = 8,
  IPFailureReasonObscuredFace = 9,
  IPFailureReasonUserTimeout = 10,
  IPFailureReasonNotSupported = 11,
};

@class UIImage;
@class NSString;

SWIFT_CLASS_NAMED("FailureResult")
@interface IPFailureResult : NSObject
@property (nonatomic, readonly) enum IPFailureReason reason;
@property (nonatomic, readonly, strong) UIImage * _Nullable frame;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("Filter")
@protocol IPFilter
@end



SWIFT_CLASS_NAMED("IProov")
@interface IProov : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IPOptions;
@class NSNumber;
@class IPSuccessResult;
@class NSError;

@interface IProov (SWIFT_EXTENSION(iProov))
+ (void)launchWithStreamingURL:(NSString * _Nonnull)streamingURL token:(NSString * _Nonnull)token options:(IPOptions * _Nonnull)options connecting:(void (^ _Nonnull)(void))connecting connected:(void (^ _Nonnull)(void))connected processing:(void (^ _Nonnull)(double, NSString * _Nonnull))processing success:(void (^ _Nonnull)(IPSuccessResult * _Nonnull))success cancelled:(void (^ _Nonnull)(enum IPCanceller))cancelled failure:(void (^ _Nonnull)(IPFailureResult * _Nonnull))failure error:(void (^ _Nonnull)(NSError * _Nonnull))error;
@end

@class IPKeyPair;

@interface IProov (SWIFT_EXTENSION(iProov))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) IPKeyPair * _Nonnull keyPair;)
+ (IPKeyPair * _Nonnull)keyPair SWIFT_WARN_UNUSED_RESULT;
+ (void)setKeyPair:(IPKeyPair * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull versionStr;)
+ (NSString * _Nonnull)versionStr SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger buildNumber;)
+ (NSInteger)buildNumber SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("IProovErrorCode")
@interface IPErrorCode : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger networkError;)
+ (NSInteger)networkError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger serverError;)
+ (NSInteger)serverError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger captureAlreadyActive;)
+ (NSInteger)captureAlreadyActive SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraPermissionDenied;)
+ (NSInteger)cameraPermissionDenied SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger unexpectedError;)
+ (NSInteger)unexpectedError SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;

SWIFT_PROTOCOL("_TtP6iProov26IProovPresentationDelegate_")
@protocol IProovPresentationDelegate
- (void)presentWithIProovViewController:(UIViewController * _Nonnull)iProovViewController completion:(void (^ _Nullable)(void))completion;
- (void)dismissWithIProovViewController:(UIViewController * _Nonnull)iProovViewController completion:(void (^ _Nullable)(void))completion;
@end

@class IPPublicKey;
@class NSData;

SWIFT_CLASS_NAMED("KeyPair")
@interface IPKeyPair : NSObject
@property (nonatomic, readonly, strong) IPPublicKey * _Nonnull publicKey;
@property (nonatomic, readonly) BOOL isInSecureEnclave;
- (NSData * _Nonnull)signWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







@class NSBundle;
@class UIColor;
@class IPGenuinePresenceAssuranceOptions;
@class IPLivenessAssuranceOptions;

SWIFT_CLASS_NAMED("Options")
@interface IPOptions : NSObject
/// Create Options from a JSON string representation
+ (IPOptions * _Nonnull)fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@property (nonatomic, strong) id <IPFilter> _Nonnull filter;
@property (nonatomic, strong) NSBundle * _Nullable stringsBundle;
@property (nonatomic, copy) NSString * _Nullable stringsTable;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIColor * _Nullable headerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull closeButtonTintColor;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nonnull font;
@property (nonatomic, strong) UIImage * _Nonnull closeButtonImage;
@property (nonatomic, strong) UIImage * _Nullable logoImage;
@property (nonatomic, strong) UIColor * _Nonnull promptTextColor;
@property (nonatomic, strong) UIColor * _Nonnull promptBackgroundColor;
@property (nonatomic) BOOL promptRoundedCorners;
@property (nonatomic) BOOL disableExteriorEffects;
@property (nonatomic, strong) UIColor * _Nonnull surroundColor;
@property (nonatomic, strong) IPGenuinePresenceAssuranceOptions * _Nonnull genuinePresenceAssurance;
@property (nonatomic, strong) IPLivenessAssuranceOptions * _Nonnull livenessAssurance;
@property (nonatomic, weak) id <IProovPresentationDelegate> _Nullable presentationDelegate;
@property (nonatomic, copy) NSArray<NSData *> * _Nonnull certificates;
@property (nonatomic) NSTimeInterval timeout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GenuinePresenceAssurance")
@interface IPGenuinePresenceAssuranceOptions : NSObject
@property (nonatomic, strong) UIColor * _Nonnull notReadyOvalStrokeColor;
@property (nonatomic, strong) UIColor * _Nonnull readyOvalStrokeColor;
@property (nonatomic) CGFloat maxYaw SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
@property (nonatomic) CGFloat maxRoll SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
@property (nonatomic) CGFloat maxPitch SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LivenessAssurance")
@interface IPLivenessAssuranceOptions : NSObject
@property (nonatomic, strong) UIColor * _Nonnull ovalStrokeColor;
@property (nonatomic, strong) UIColor * _Nonnull completedOvalStrokeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum IPLineDrawingFilterStyle : NSInteger;

SWIFT_CLASS_NAMED("LineDrawingFilter")
@interface IPLineDrawingFilter : NSObject <IPFilter>
@property (nonatomic) enum IPLineDrawingFilterStyle style;
@property (nonatomic, strong) UIColor * _Nonnull foregroundColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)initWithStyle:(enum IPLineDrawingFilterStyle)style foregroundColor:(UIColor * _Nonnull)foregroundColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, IPLineDrawingFilterStyle, "Style", open) {
  IPLineDrawingFilterStyleClassic = 0,
  IPLineDrawingFilterStyleShaded = 1,
  IPLineDrawingFilterStyleVibrant = 2,
};

enum IPNaturalFilterStyle : NSInteger;

SWIFT_CLASS_NAMED("NaturalFilter")
@interface IPNaturalFilter : NSObject <IPFilter>
@property (nonatomic) enum IPNaturalFilterStyle style;
- (nonnull instancetype)initWithStyle:(enum IPNaturalFilterStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, IPNaturalFilterStyle, "Style", open) {
  IPNaturalFilterStyleClear = 0,
  IPNaturalFilterStyleBlur = 1,
};




SWIFT_CLASS_NAMED("PublicKey")
@interface IPPublicKey : NSObject
@property (nonatomic, readonly) SecKeyRef _Nonnull key;
@property (nonatomic, readonly, copy) NSString * _Nonnull pem;
@property (nonatomic, readonly, copy) NSData * _Nonnull der;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Session")
@interface IPSession : NSObject
- (BOOL)cancel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("SuccessResult")
@interface IPSuccessResult : NSObject
@property (nonatomic, readonly, strong) UIImage * _Nullable frame;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



















@interface WKWebView (SWIFT_EXTENSION(iProov))
- (void)installIProovNativeBridgeWithCryptographyEnabled:(BOOL)cryptographyEnabled;
- (void)uninstallNativeBridge;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef IPROOV_SWIFT_H
#define IPROOV_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import Security;
@import WebKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="iProov",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif







typedef SWIFT_ENUM_NAMED(NSInteger, IPCanceller, "Canceller", open) {
  IPCancellerUser = 0,
  IPCancellerApp = 1,
};


typedef SWIFT_ENUM_NAMED(NSInteger, IPFailureReason, "FailureReason", open) {
  IPFailureReasonUnknown = 0,
  IPFailureReasonTooMuchMovement = 1,
  IPFailureReasonTooBright = 2,
  IPFailureReasonTooDark = 3,
  IPFailureReasonMisalignedFace = 4,
  IPFailureReasonEyesClosed = 5,
  IPFailureReasonFaceTooFar = 6,
  IPFailureReasonFaceTooClose = 7,
  IPFailureReasonSunglasses = 8,
  IPFailureReasonObscuredFace = 9,
  IPFailureReasonUserTimeout = 10,
  IPFailureReasonNotSupported = 11,
};

@class UIImage;
@class NSString;

SWIFT_CLASS_NAMED("FailureResult")
@interface IPFailureResult : NSObject
@property (nonatomic, readonly) enum IPFailureReason reason;
@property (nonatomic, readonly, strong) UIImage * _Nullable frame;
@property (nonatomic, readonly, copy) NSString * _Nonnull localizedDescription;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL_NAMED("Filter")
@protocol IPFilter
@end



SWIFT_CLASS_NAMED("IProov")
@interface IProov : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class IPOptions;
@class NSNumber;
@class IPSuccessResult;
@class NSError;

@interface IProov (SWIFT_EXTENSION(iProov))
+ (void)launchWithStreamingURL:(NSString * _Nonnull)streamingURL token:(NSString * _Nonnull)token options:(IPOptions * _Nonnull)options connecting:(void (^ _Nonnull)(void))connecting connected:(void (^ _Nonnull)(void))connected processing:(void (^ _Nonnull)(double, NSString * _Nonnull))processing success:(void (^ _Nonnull)(IPSuccessResult * _Nonnull))success cancelled:(void (^ _Nonnull)(enum IPCanceller))cancelled failure:(void (^ _Nonnull)(IPFailureResult * _Nonnull))failure error:(void (^ _Nonnull)(NSError * _Nonnull))error;
@end

@class IPKeyPair;

@interface IProov (SWIFT_EXTENSION(iProov))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, strong) IPKeyPair * _Nonnull keyPair;)
+ (IPKeyPair * _Nonnull)keyPair SWIFT_WARN_UNUSED_RESULT;
+ (void)setKeyPair:(IPKeyPair * _Nonnull)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull versionStr;)
+ (NSString * _Nonnull)versionStr SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger buildNumber;)
+ (NSInteger)buildNumber SWIFT_WARN_UNUSED_RESULT;
@end



SWIFT_CLASS_NAMED("IProovErrorCode")
@interface IPErrorCode : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger networkError;)
+ (NSInteger)networkError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger serverError;)
+ (NSInteger)serverError SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger captureAlreadyActive;)
+ (NSInteger)captureAlreadyActive SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger cameraPermissionDenied;)
+ (NSInteger)cameraPermissionDenied SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) NSInteger unexpectedError;)
+ (NSInteger)unexpectedError SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;

SWIFT_PROTOCOL("_TtP6iProov26IProovPresentationDelegate_")
@protocol IProovPresentationDelegate
- (void)presentWithIProovViewController:(UIViewController * _Nonnull)iProovViewController completion:(void (^ _Nullable)(void))completion;
- (void)dismissWithIProovViewController:(UIViewController * _Nonnull)iProovViewController completion:(void (^ _Nullable)(void))completion;
@end

@class IPPublicKey;
@class NSData;

SWIFT_CLASS_NAMED("KeyPair")
@interface IPKeyPair : NSObject
@property (nonatomic, readonly, strong) IPPublicKey * _Nonnull publicKey;
@property (nonatomic, readonly) BOOL isInSecureEnclave;
- (NSData * _Nonnull)signWithData:(NSData * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end







@class NSBundle;
@class UIColor;
@class IPGenuinePresenceAssuranceOptions;
@class IPLivenessAssuranceOptions;

SWIFT_CLASS_NAMED("Options")
@interface IPOptions : NSObject
/// Create Options from a JSON string representation
+ (IPOptions * _Nonnull)fromDictionary:(NSDictionary<NSString *, id> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull dictionary;
@property (nonatomic, strong) id <IPFilter> _Nonnull filter;
@property (nonatomic, strong) NSBundle * _Nullable stringsBundle;
@property (nonatomic, copy) NSString * _Nullable stringsTable;
@property (nonatomic, strong) UIColor * _Nonnull titleTextColor;
@property (nonatomic, strong) UIColor * _Nullable headerBackgroundColor;
@property (nonatomic, strong) UIColor * _Nonnull closeButtonTintColor;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nonnull font;
@property (nonatomic, strong) UIImage * _Nonnull closeButtonImage;
@property (nonatomic, strong) UIImage * _Nullable logoImage;
@property (nonatomic, strong) UIColor * _Nonnull promptTextColor;
@property (nonatomic, strong) UIColor * _Nonnull promptBackgroundColor;
@property (nonatomic) BOOL promptRoundedCorners;
@property (nonatomic) BOOL disableExteriorEffects;
@property (nonatomic, strong) UIColor * _Nonnull surroundColor;
@property (nonatomic, strong) IPGenuinePresenceAssuranceOptions * _Nonnull genuinePresenceAssurance;
@property (nonatomic, strong) IPLivenessAssuranceOptions * _Nonnull livenessAssurance;
@property (nonatomic, weak) id <IProovPresentationDelegate> _Nullable presentationDelegate;
@property (nonatomic, copy) NSArray<NSData *> * _Nonnull certificates;
@property (nonatomic) NSTimeInterval timeout;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("GenuinePresenceAssurance")
@interface IPGenuinePresenceAssuranceOptions : NSObject
@property (nonatomic, strong) UIColor * _Nonnull notReadyOvalStrokeColor;
@property (nonatomic, strong) UIColor * _Nonnull readyOvalStrokeColor;
@property (nonatomic) CGFloat maxYaw SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
@property (nonatomic) CGFloat maxRoll SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
@property (nonatomic) CGFloat maxPitch SWIFT_DEPRECATED_MSG("This option will be removed in a future SDK version.");
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("LivenessAssurance")
@interface IPLivenessAssuranceOptions : NSObject
@property (nonatomic, strong) UIColor * _Nonnull ovalStrokeColor;
@property (nonatomic, strong) UIColor * _Nonnull completedOvalStrokeColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum IPLineDrawingFilterStyle : NSInteger;

SWIFT_CLASS_NAMED("LineDrawingFilter")
@interface IPLineDrawingFilter : NSObject <IPFilter>
@property (nonatomic) enum IPLineDrawingFilterStyle style;
@property (nonatomic, strong) UIColor * _Nonnull foregroundColor;
@property (nonatomic, strong) UIColor * _Nonnull backgroundColor;
- (nonnull instancetype)initWithStyle:(enum IPLineDrawingFilterStyle)style foregroundColor:(UIColor * _Nonnull)foregroundColor backgroundColor:(UIColor * _Nonnull)backgroundColor OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, IPLineDrawingFilterStyle, "Style", open) {
  IPLineDrawingFilterStyleClassic = 0,
  IPLineDrawingFilterStyleShaded = 1,
  IPLineDrawingFilterStyleVibrant = 2,
};

enum IPNaturalFilterStyle : NSInteger;

SWIFT_CLASS_NAMED("NaturalFilter")
@interface IPNaturalFilter : NSObject <IPFilter>
@property (nonatomic) enum IPNaturalFilterStyle style;
- (nonnull instancetype)initWithStyle:(enum IPNaturalFilterStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM_NAMED(NSInteger, IPNaturalFilterStyle, "Style", open) {
  IPNaturalFilterStyleClear = 0,
  IPNaturalFilterStyleBlur = 1,
};




SWIFT_CLASS_NAMED("PublicKey")
@interface IPPublicKey : NSObject
@property (nonatomic, readonly) SecKeyRef _Nonnull key;
@property (nonatomic, readonly, copy) NSString * _Nonnull pem;
@property (nonatomic, readonly, copy) NSData * _Nonnull der;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("Session")
@interface IPSession : NSObject
- (BOOL)cancel;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("SuccessResult")
@interface IPSuccessResult : NSObject
@property (nonatomic, readonly, strong) UIImage * _Nullable frame;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



















@interface WKWebView (SWIFT_EXTENSION(iProov))
- (void)installIProovNativeBridgeWithCryptographyEnabled:(BOOL)cryptographyEnabled;
- (void)uninstallNativeBridge;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
